
// Parameters
.decl shares(p: address, n: uint)[0]
.decl released(p: address, n: uint)[0]
.decl *totalShares(n: uint)
.decl *totalReleased(n: uint)
.decl *totalReceived(n: uint)

// Transactions
.decl release(p: address, n: uint)

// Rules
release(p, n) :- release(p, n).

// Total shares and balances calculations
totalShares(s) :- s = sum n: shares(_, n).
send(p, n) :- release(p, n).

totalReleased(s) :- s = sum e: release(_, e).
released(p, s) :- release(p, _), s = sum n: release(p, n).
totalReceived(r) :- thisBalance(n), totalReleased(e), r := n + e.
